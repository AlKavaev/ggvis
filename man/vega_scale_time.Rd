% Generated by roxygen2 (4.0.1): do not edit by hand
\name{vega_scale_time}
\alias{vega_scale_time}
\title{Create a date/time scale.}
\usage{
vega_scale_time(name, utc = FALSE, clamp = FALSE, nice = NULL,
  domain = NULL, range = NULL, reverse = FALSE, round = FALSE)
}
\arguments{
\item{clamp}{If true, values that exceed the data domain are clamped to
either the minimum or maximum range value.}

\item{nice}{If specified, modifies the scale domain to use a more
human-friendly value range. Should be a string indicating the desired time
interval; legal values are "second", "minute", "hour", "day", "week",
"month", or "year"}

\item{utc}{if \code{TRUE}, uses UTC times.}

\item{name}{name of the scale.}

\item{domain}{The domain of the scale, representing the set of data values.
For ordinal scales, a character vector; for quantitative scales, a numeric
vector of length two. Either value (but not both) may be NA, in which
case \code{domainMin} or \code{domainMax} is set.}

\item{range}{The range of the scale, representing the set of visual values.
For numeric values, the range can take the form of a two-element array with
minimum and maximum values. For ordinal data, the range may by an array of
desired output values, which are mapped to elements in the specified
domain. The following range literals are also available: "width", "height",
"shapes", "category10", "category20".}

\item{reverse}{If true, flips the scale range.}

\item{round}{If true, rounds numeric output values to integers. This can be
helpful for snapping to the pixel grid.}
}
\description{
A date/time scale controls the mapping of date and time variables to
visual properties.
}
\details{
Generally, you should create new scales with \code{dscale} because
that will automatically set the range to a reasonable default, and it will
automatically pick the correct type of scale given the variable type.
}
\examples{
set.seed(2934)
dat <- data.frame(times = as.POSIXct("2013-07-01", tz = "GMT") +
                          rnorm(200) * 60 * 60 * 24 * 7)
p <- dat \%>\% ggvis(x = ~times) \%>\% layer_histograms()
p

vega_scale_time("x", nice = "year")
p \%>\% scale_datetime("x", nice = "year")

vega_scale_time("x", utc = TRUE)
p \%>\% scale_datetime("x", utc = TRUE)
}
\seealso{
\url{https://github.com/trifacta/vega/wiki/Scales#time-scale-properties}

Other vega scales: \code{\link{vega_scale_ordinal}};
  \code{\link{vega_scale_quantitative}}
}

