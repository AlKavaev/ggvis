% Generated by roxygen2 (4.0.0): do not edit by hand
\name{layer_smooth}
\alias{layer_smooth}
\title{Overlay a smooth curve}
\usage{
layer_smooth(vis, props = NULL, ..., formula = NULL, method = NULL,
  se = FALSE)
}
\description{
\code{layer_smooth} combines \code{\link{smooth}} with \code{mark_path} and
\code{mark_area} to display 1d model fit to the data in order to smooth it.
It optionally displays the standard error.
}
\examples{
mtcars \%>\% ggvis(~wt, ~mpg) \%>\% layer_smooth()
mtcars \%>\% ggvis(~wt, ~mpg) \%>\% layer_smooth(se = T)

# Control the wiggliness of the loess smoother with the span parameter
mtcars \%>\% ggvis(~wt, ~mpg) \%>\% layer_point() \%>\%
  layer_smooth(span = 0.2)
# Or map to a control and modify interactively
mtcars \%>\% ggvis(~wt, ~mpg) \%>\% layer_point() \%>\%
  layer_smooth(span = input_slider(0.2, 1))

# Use other modelling functions
mtcars \%>\% ggvis(~wt, ~mpg) \%>\%
  layer_point() \%>\%
  layer_smooth(method = "lm") \%>\%
  layer_smooth(method = "MASS::rlm", props(stroke := "red"))

# layer_smooth() is just smooth() + mark_path()
mtcars \%>\% ggvis(~wt, ~mpg) \%>\% layer_smooth()
mtcars \%>\%
  ggvis(~wt, ~mpg) \%>\%
  layer_point() \%>\%
  smooth(mpg ~ wt) \%>\%
  mark_path(props(~pred_, ~resp_, strokeWidth := 2))

# Run smooth outside of a visualisation to see what variables you get
mtcars \%>\% smooth(mpg ~ wt)
}

